version: "3.8"
services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - proyect1
      - proyect2
      - proyect3

  postgres-db:
    image: postgres:latest
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql
    environment:
      POSTGRES_DB: topEd
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"

  proyect1:
    container_name: proyect1
    image: cosiobit/proyect
    ports:
      - "8091:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/projectores
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres-db
  proyect2:
    container_name: proyect2
    image: cosiobit/proyect
      - "8092:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/projectores
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres-db

  proyect3:
    container_name: project-proyect3
    image: cosiobit/proyect
    ports:
      - "8093:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/projectores
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres-db